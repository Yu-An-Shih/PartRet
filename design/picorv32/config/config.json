{
    "RTL": [ "design/picorv32/rtl/" ],
    "top_module": "picorv32_qchannel",
    "clock": "clk",
    "resets": {
        "resetn": 0
    },
    "reset_input_values": {
        "qreqn": "1'b1"
    },
    "non_resettable_regs": [
        "picorv32_inst.alu_out_q",
        "picorv32_inst.cached_ascii_instr",
        "picorv32_inst.cached_insn_imm",
        "picorv32_inst.cached_insn_opcode",
        "picorv32_inst.cached_insn_rd",
        "picorv32_inst.cached_insn_rs1",
        "picorv32_inst.cached_insn_rs2",
        "picorv32_inst.compressed_instr",
        "picorv32_inst.cpuregs[0]",
        "picorv32_inst.cpuregs[10]",
        "picorv32_inst.cpuregs[11]",
        "picorv32_inst.cpuregs[12]",
        "picorv32_inst.cpuregs[13]",
        "picorv32_inst.cpuregs[14]",
        "picorv32_inst.cpuregs[15]",
        "picorv32_inst.cpuregs[16]",
        "picorv32_inst.cpuregs[17]",
        "picorv32_inst.cpuregs[18]",
        "picorv32_inst.cpuregs[19]",
        "picorv32_inst.cpuregs[1]",
        "picorv32_inst.cpuregs[20]",
        "picorv32_inst.cpuregs[21]",
        "picorv32_inst.cpuregs[22]",
        "picorv32_inst.cpuregs[23]",
        "picorv32_inst.cpuregs[24]",
        "picorv32_inst.cpuregs[25]",
        "picorv32_inst.cpuregs[26]",
        "picorv32_inst.cpuregs[27]",
        "picorv32_inst.cpuregs[28]",
        "picorv32_inst.cpuregs[29]",
        "picorv32_inst.cpuregs[2]",
        "picorv32_inst.cpuregs[30]",
        "picorv32_inst.cpuregs[31]",
        "picorv32_inst.cpuregs[3]",
        "picorv32_inst.cpuregs[4]",
        "picorv32_inst.cpuregs[5]",
        "picorv32_inst.cpuregs[6]",
        "picorv32_inst.cpuregs[7]",
        "picorv32_inst.cpuregs[8]",
        "picorv32_inst.cpuregs[9]",
        "picorv32_inst.dbg_insn_addr",
        "picorv32_inst.dbg_rs1val",
        "picorv32_inst.dbg_rs1val_valid",
        "picorv32_inst.dbg_rs2val",
        "picorv32_inst.dbg_rs2val_valid",
        "picorv32_inst.decoded_imm",
        "picorv32_inst.decoded_imm_j",
        "picorv32_inst.decoded_rd",
        "picorv32_inst.decoded_rs1",
        "picorv32_inst.decoded_rs2",
        "picorv32_inst.instr_auipc",
        "picorv32_inst.instr_ecall_ebreak",
        "picorv32_inst.instr_getq",
        "picorv32_inst.instr_jal",
        "picorv32_inst.instr_jalr",
        "picorv32_inst.instr_lb",
        "picorv32_inst.instr_lbu",
        "picorv32_inst.instr_lh",
        "picorv32_inst.instr_lhu",
        "picorv32_inst.instr_lui",
        "picorv32_inst.instr_lw",
        "picorv32_inst.instr_maskirq",
        "picorv32_inst.instr_rdcycle",
        "picorv32_inst.instr_rdcycleh",
        "picorv32_inst.instr_rdinstr",
        "picorv32_inst.instr_rdinstrh",
        "picorv32_inst.instr_retirq",
        "picorv32_inst.instr_sb",
        "picorv32_inst.instr_setq",
        "picorv32_inst.instr_sh",
        "picorv32_inst.instr_slli",
        "picorv32_inst.instr_srai",
        "picorv32_inst.instr_srli",
        "picorv32_inst.instr_sw",
        "picorv32_inst.instr_timer",
        "picorv32_inst.instr_waitirq",
        "picorv32_inst.is_alu_reg_imm",
        "picorv32_inst.is_alu_reg_reg",
        "picorv32_inst.is_jalr_addi_slti_sltiu_xori_ori_andi",
        "picorv32_inst.is_lb_lh_lw_lbu_lhu",
        "picorv32_inst.is_lbu_lhu_lw",
        "picorv32_inst.is_lui_auipc_jal",
        "picorv32_inst.is_lui_auipc_jal_jalr_addi_add_sub",
        "picorv32_inst.is_sb_sh_sw",
        "picorv32_inst.is_sll_srl_sra",
        "picorv32_inst.is_slli_srli_srai",
        "picorv32_inst.latched_compr",
        "picorv32_inst.latched_rd",
        "picorv32_inst.mem_addr",
        "picorv32_inst.mem_instr",
        "picorv32_inst.mem_rdata_q",
        "picorv32_inst.mem_wdata",
        "picorv32_inst.mem_wordsize",
        "picorv32_inst.mem_wstrb",
        "picorv32_inst.next_insn_opcode",
        "picorv32_inst.pcpi_insn",
        "picorv32_inst.q_ascii_instr",
        "picorv32_inst.q_insn_imm",
        "picorv32_inst.q_insn_opcode",
        "picorv32_inst.q_insn_rd",
        "picorv32_inst.q_insn_rs1",
        "picorv32_inst.q_insn_rs2",
        "picorv32_inst.reg_op1",
        "picorv32_inst.reg_op2"
    ],

    "power_interface_outputs": [
        "qacceptn",
        "qdeny"
    ],
    "restore_condition": "",
    "check_condition": "qacceptn",

    "src": "design/picorv32/config/source.json",
    "dst": "design/picorv32/work/solution.json"
}